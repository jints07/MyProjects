               _
   _       _ _(_)_     |  A fresh approach to technical computing
  (_)     | (_) (_)    |  Documentation: https://docs.julialang.org
   _ _   _| |_  __ _   |  Type "?help" for help.
  | | | | | | |/ _' |  |
  | | |_| | | | (_| |  |  Version 0.6.0 (2017-06-19 13:05 UTC)
 _/ |\__'_|_|_|\__'_|  |  Official http://julialang.org/ release
|__/                   |  x86_64-pc-linux-gnu

WARNING: Terminal not fully functional
julia> 
julia> # Partition the Eigenvectors and Eigenvalues
+    l       = searchsortedfirst(-Λ, -1) - 1
+    Λ1, Λ2  = Λ[1:l],Λ[l+1:length(Λ)]
+    V11, V12, V21, V22 = partition(V, l)

julia> ERROR: UndefVarError: Λ not defined

julia> ERROR: UndefVarError: Λ not defined

julia> ERROR: UndefVarError: partition not defined

julia> workspace();
using ForwardDiff, Distributions, Gadfly, NLsolve;

julia> WARNING: Method definition eachindex(Main.Base.Cmd) in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:608 overwritten in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:608.
WARNING: Method definition logdet(Any) in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:638 overwritten in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:638.
WARNING: Method definition chol(Main.Base.LinAlg.UniformScaling{T} where T<:Number, Any...) in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:645 overwritten in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:645.
WARNING: Method definition chol!(Main.Base.LinAlg.UniformScaling{T} where T<:Number, Any) in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:644 overwritten in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:644.
WARNING: Method definition done(Main.Base.Cmd, Any) in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:611 overwritten in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:611.
WARNING: Method definition endof(Main.Base.Cmd) in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:608 overwritten in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:608.
WARNING: Method definition next(Main.Base.Cmd, Any) in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:611 overwritten in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:611.
WARNING: Method definition eltype(Main.Base.Cmd) in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:608 overwritten in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:608.
WARNING: Method definition getindex(Main.Base.Cmd, Any) in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:611 overwritten in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:611.
WARNING: Method definition last(Main.Base.Cmd) in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:608 overwritten in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:608.
WARNING: Method definition expand(Module, ANY) in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:575 overwritten in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:575.
WARNING: Method definition include_string(Module, String, String) in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:577 overwritten in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:577.
WARNING: Method definition include_string(Module, AbstractString) in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:579 overwritten in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:579.
WARNING: Method definition include_string(Module, AbstractString, AbstractString) in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:579 overwritten in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:579.
WARNING: Method definition first(Main.Base.Cmd) in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:608 overwritten in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:608.
WARNING: Method definition macroexpand(Module, ANY) in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:576 overwritten in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:576.
WARNING: Method definition length(Main.Base.Cmd) in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:608 overwritten in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:608.
WARNING: Method definition start(Main.Base.Cmd) in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:608 overwritten in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:608.
WARNING: Method definition (::Type{Main.Base.Val{T} where T})(Any) in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:632 overwritten in module Compat at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Compat/src/Compat.jl:632.

julia> # BELLMAN ITERATION
# Set parameter values
γn = 0.03; # Population growth rate
γz = 0.05; # Productivity growth rate
β = 0.95*(1+γn); # β* - Modified discount rate for stationary problem
θ = 1/3; # Capital share
δ = 0.1; # Depreciation rate
ψ = 1.7; # Parameter in utility function
σz = 0.0; # Standard deviation of technology shock
Ps = [0.9 0   0   0;
+     0   0.9 0   0;
+     0   0   0.9 0;
+     0   0   0   0.9]
Qs = [0.04 0   0   0;
+     0   0.03 0   0;
+     0   0   0.03 0;
+     0   0   0   0.15]

julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> # Get Steady State Values of k and h
S_ss = [0 0.0 0.0 log(0.1)]; #SS shocks S_ss = [log(z_ss) τx_ss τh_ss log(g_ss)];
r_ss(x_ss) = θ*(x_ss[1]/x_ss[2])^(θ-1)*exp(S_ss[1])^(1-θ); #SS rental rate
w_ss(x_ss) = (1-θ)*(x_ss[1]/x_ss[2])^θ*exp(S_ss[1])^(1-θ); #SS  wage
κ_ss(x_ss) = S_ss[2]*((1+γn)*(1+γz)*x_ss[1] - (1-δ)*x_ss[1]) + S_ss[3]*w_ss(x_ss)*x_ss[2] - exp(S_ss[4]); # SS transfer
c_ss(x_ss) =  r_ss(x_ss)*x_ss[1] + (1-S_ss[3])*w_ss(x_ss)*x_ss[2] + κ_ss(x_ss) - (1+S_ss[2])*((1+γn)*(1+γz)*x_ss[1] - (1-δ)*x_ss[1]); #SS consumption
function f!(x_ss,resvec)
+        resvec[1] = ψ*c_ss(x_ss) - (1-S_ss[3])*w_ss(x_ss)*(1-x_ss[2])
+        resvec[2] = (1+γn)*(1+γz) - β*(r_ss(x_ss) + (1+S_ss[2])*(1-δ))       
+    end
x_start = [.1; 0.4]; #Initial guess for steady state [k_ss h_ss]
x_ss = nlsolve(f!,x_start,autodiff = true)
x_ss = x_ss.zero;
4×4 Array{Float64,2}:
## GET THE MATRICES Q,R,W
# State variable X_t = [1 Y_t] =  [1 k_t log(z_t) τ_xt τ_ht log(g_t/g_ss) K_t H_t K_t+1]
# Control u_t = [k_t+1 h_t]
# Z_t = [X_t u_t] = [1 Y_t u_t]
# X_t = [X_1t X_2t X_3t] where X_1t, X_2t & X_3t represent "little k" variables, shock processes and "big K" variables respectively
# U(Z) - utility function. First we take second order taylor expansion around SS and construct matrix G such that U(Z) = Z'GZ. From this we can back out Q, R and W
n_X = 8; # Number of state variables excluding constant 1. Includes variables with unknown laws of motion as well
n_y = 6; # Number of state variables with known laws of motion
n_u = 2; # Number of control variables
nparam = n_X + n_u; #This is number of true parameters, equals number of state and control variables. Excludes variables like psi etc
param = [x_ss[1],S_ss[1],S_ss[2],S_ss[3],0,x_ss[1],x_ss[2],x_ss[1],x_ss[1],x_ss[2]]; # param = [k,log(z),τ_xt,τ_ht,log(g_t)-log(g_ss),K,H,K',k',h]
 0.9  0.0  0.0  0.0
 0.0  0.9  0.0  0.0
 0.0  0.0  0.9  0.0
 0.0  0.0  0.0  0.9

julia> 4×4 Array{Float64,2}:
 0.04  0.0   0.0   0.0 
 0.0   0.03  0.0   0.0 
 0.0   0.0   0.03  0.0 
 0.0   0.0   0.0   0.15

julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> f! (generic function with 1 method)

julia> 
julia> # Define single period utility as function of parameters
c(X) = r(X)*X[1] + (1-X[4])*w(X)*X[10] + κ(X) - (1+X[3])*((1+γn)*(1+γz)*X[9] - (1-δ)*X[1]); #Consumption of individual
r(X) = θ*(X[6]/X[7])^(θ-1)*exp(X[2])^(1-θ); # rental rate for capital
w(X) = (1-θ)*(X[6]/X[7])^θ*exp(X[2])^(1-θ); # wage
κ(X) = X[3]*((1+γn)*(1+γz)*X[8] - (1-δ)*X[6]) + X[4]*w(X)*X[7] - exp(S_ss[4])*exp(X[5]); # transfer from govt
Utility(X) = log(c(X)) + ψ*log(1-X[10]);
g = x->ForwardDiff.gradient(Utility,x);
h = x->ForwardDiff.hessian(Utility,x);
# Calculate first and second dervative of utility function
derivative_1 = g(param);
derivative_1 = derivative_1;
derivative_2 = h(param);
derivative_2 = derivative_2;
# Get matrix G
# Define constant of Taylor expansion
Const = Utility(param) - derivative_1'*param[1:nparam] + 0.5*param[1:nparam]'*derivative_2*param[1:nparam];
# Define Vector to be multiplied with Z 
N = derivative_1'-param[1:nparam]'*derivative_2;
G = zeros(nparam+1, nparam+1);
G[1,1] = Const;
G[1,2:size(G,2)] =  N[1:size(N,2)]/2;
G[2:size(G,1),1] = N'/2;
G[2:size(G,1),2:size(G,2)] = derivative_2/2;
# Step 1 - Get Q, R and W from G
Q = G[1:n_X+1,1:n_X+1];
R = G[n_X+2:(nparam+1),(n_X+2):(nparam+1)];
W = G[1:(n_X+1),(n_X+2):(nparam+1)];
# Step 2 - Get Q_tilde,Q_tilde_y,Q_tilde_z
Q_tilde  = Q - W*inv(R)*W';
Qy_tilde = Q_tilde[1:n_y+1,1:n_y+1];
Qz_tilde = Q_tilde[1:n_y+1,n_y+2:n_X+1];
## GET MATRICES Ay,Az,By, Ay_tilde, Az_tilde, By_tilde
Ay = [1.0 0 0 0 0 0 0;
+            0 0 0 0 0 0 0;
+            0 0 0 0 0 0 0;
+            0 0 0 0 0 0 0;
+            0 0 0 0 0 0 0;
+            0 0 0 0 0 0 0;
+            0 0 0 0 0 0 0];
Ay[3:6,3:6] = Ps;
By = [0.0 0;
+      1 0;
+      0 0;
+      0 0;
+      0 0;
+      0 0;
+      0 0];
Cy = zeros(size(Ay,1),size(Ps,1));
Cy[3:6,1:size(Ps,1)] = Qs;
Wy = W[1:n_y+1,1:size(W,2)];
Wz = W[n_y+2:size(W,1),1:size(W,2)];
Az = [0.0 0;
+      0 0;
+      0 0;
+      0 0;
+      0 0;
+      0 0;
+      0 1];
Ay_tilde = sqrt(β)*(Ay-By*inv(R)*Wy');
Az_tilde = sqrt(β)*(Az-By*inv(R)*Wz');
By_tilde = sqrt(β)*By;
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:57
 [3] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/trust_region.jl:82
 [4] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [5] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [6] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::#f!, ::Array{Float64,1}) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [8] eval(::Module, ::Any) at ./boot.jl:235
 [9] eval_user_input(::Any, ::Base.REPL.REPLBackend) at ./REPL.jl:66
 [10] macro expansion at ./REPL.jl:97 [inlined]
 [11] (::Base.REPL.##1#2{Base.REPL.REPLBackend})() at ./event.jl:73
while loading no file, in expression starting on line 0
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] !(::BitArray{1}) at ./deprecated.jl:57
 [3] check_isfinite(::Array{Float64,1}) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/utils.jl:32
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/trust_region.jl:91
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::#f!, ::Array{Float64,1}) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [8] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [9] eval(::Module, ::Any) at ./boot.jl:235
 [10] eval_user_input(::Any, ::Base.REPL.REPLBackend) at ./REPL.jl:66
 [11] macro expansion at ./REPL.jl:97 [inlined]
 [12] (::Base.REPL.##1#2{Base.REPL.REPLBackend})() at ./event.jl:73
while loading no file, in expression starting on line 0
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{NLsolve.SolverState}, ::Int64) at ./deprecated.jl:57
 [3] Type at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/solver_state_results.jl:20 [inlined]
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/trust_region.jl:99
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::#f!, ::Array{Float64,1}) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [8] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [9] eval(::Module, ::Any) at ./boot.jl:235
 [10] eval_user_input(::Any, ::Base.REPL.REPLBackend) at ./REPL.jl:66
 [11] macro expansion at ./REPL.jl:97 [inlined]
 [12] (::Base.REPL.##1#2{Base.REPL.REPLBackend})() at ./event.jl:73
while loading no file, in expression starting on line 0
# Get Θ, Θ_tilde, ψ_mc,ψ_tilde from market clearing condition
# X_3t = Θ [X_1t; X_2t] + ψ_mc u_t
Θ = zeros(n_X - n_y,n_y+1)
ψ_mc = [0.0 1;
+        1 0]; # comes from market clearing X_3t = Θ [X_1t X_2t] + ψ_mc u_t
Θ_tilde = inv(eye(ψ_mc) + ψ_mc*inv(R)*Wz')*(Θ - ψ_mc*inv(R)*Wy');
ψ_tilde = inv(eye(ψ_mc) + ψ_mc*inv(R)*Wz')*ψ_mc;
Results of Nonlinear Solver Algorithm
 * Algorithm: Trust-region with dogleg and autoscaling
 * Starting Point: [0.1, 0.4]
 * Zero: [0.887483, 0.428853]
 * Inf-norm of residuals: 0.000000
 * Iterations: 7
 * Convergence: true
   * |x - x'| < 0.0e+00: false
   * |f(x)| < 1.0e-08: true
 * Function Calls (f): 8
 * Jacobian Calls (df/dx): 8

julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> # Get matrices A_hat,Q_hat,B_hat and A_bar
A_hat = Ay_tilde + Az_tilde*Θ_tilde;
Q_hat = Qy_tilde + Qz_tilde*Θ_tilde;
B_hat = By_tilde + Az_tilde*ψ_tilde;
A_bar = Ay_tilde - By_tilde*inv(R)*ψ_tilde'*Qz_tilde';

julia> 
julia> 
julia> # Get H1 and H2 (the hamiltonians)
H1 = [A_hat zeros(A_hat);
+      -1*Q_hat eye(Q_hat)];
H2 = [eye(A_hat) B_hat*inv(R)*By_tilde';
+      zeros(A_hat) A_bar'];

julia> 
julia> H = H1,H2;
# Construct the eigenvalues/eigenvectors
+    Λ, V = eig(H...)

julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 2×7 Array{Float64,2}:
 0.0  0.0  0.0  0.0  0.0  0.0  0.0
 0.0  0.0  0.0  0.0  0.0  0.0  0.0

julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> ([1.12325, 1.12325, 1.12325, 1.12325, Inf, 1.01093, -6.91945e-17, 1.28565, 0.777816, 0.989192, 0.890272, 0.890272, 0.890272, 0.890272], [0.0 0.0 … 0.0 0.0; 0.0 0.0 … -0.120779 0.00287794; … ; 0.0 0.0 … -0.0903546 -0.555716; 0.0 0.0 … 5.46719e-18 2.28708e-17])

julia> # Construct the eigenvalues/eigenvectors
+    Λ, V = eig(H...)

julia> ([1.12325, 1.12325, 1.12325, 1.12325, Inf, 1.01093, -6.91945e-17, 1.28565, 0.777816, 0.989192, 0.890272, 0.890272, 0.890272, 0.890272], [0.0 0.0 … 0.0 0.0; 0.0 0.0 … -0.120779 0.00287794; … ; 0.0 0.0 … -0.0903546 -0.555716; 0.0 0.0 … 5.46719e-18 2.28708e-17])

julia> # Sort the eigenvalues from largest to smallest and then reorder the
+    # eigenvectors accordingly
+    idx = sortperm(-Λ)
+    Λ   = Λ[idx]
+    V   = V[:,idx]

julia> 
julia> 14-element Array{Int64,1}:
  5
  8
  1
  2
  3
  4
  6
 10
 11
 12
 13
 14
  9
  7

julia> 14-element Array{Float64,1}:
 Inf          
   1.28565    
   1.12325    
   1.12325    
   1.12325    
   1.12325    
   1.01093    
   0.989192   
   0.890272   
   0.890272   
   0.890272   
   0.890272   
   0.777816   
  -6.91945e-17

julia> 14×14 Array{Float64,2}:
 0.0   0.0          0.0  0.0  0.0  0.0  0.0  …   0.0           0.0        
 0.0   0.213897     0.0  0.0  0.0  0.0  0.0     -0.305234     -0.0650076  
 0.0   0.0          0.0  0.0  0.0  0.0  0.0      0.0           0.0        
 0.0   0.0          0.0  0.0  0.0  0.0  0.0      0.0           0.0        
 0.0   0.0          0.0  0.0  0.0  0.0  0.0      0.0           0.0        
 0.0   0.0          0.0  0.0  0.0  0.0  0.0  …   0.0           0.0        
 0.0   0.213897     0.0  0.0  0.0  0.0  0.0     -0.305234      0.569269   
 0.0   0.334899     0.0  0.0  0.0  0.0  1.0     -1.0          -0.0313578  
 0.0   0.0892902    0.0  0.0  0.0  0.0  0.0      0.46087      -0.10649    
 0.0  -1.0          1.0  0.0  0.0  0.0  0.0      0.243059      0.0683272  
 0.0   7.04712e-16  0.0  1.0  0.0  0.0  0.0  …   1.24084e-15  -1.0        
 0.0  -4.18357e-16  0.0  0.0  1.0  0.0  0.0     -2.80668e-16   1.68265e-17
 0.0   0.0726226    0.0  0.0  0.0  1.0  0.0     -0.106615      6.54333e-18
 1.0   2.93639e-17  0.0  0.0  0.0  0.0  0.0      1.37408e-18   0.171324   

julia> V
14×14 Array{Float64,2}:
 0.0   0.0          0.0  0.0  0.0  0.0  0.0  …   0.0           0.0        
 0.0   0.213897     0.0  0.0  0.0  0.0  0.0     -0.305234     -0.0650076  
 0.0   0.0          0.0  0.0  0.0  0.0  0.0      0.0           0.0        
 0.0   0.0          0.0  0.0  0.0  0.0  0.0      0.0           0.0        
 0.0   0.0          0.0  0.0  0.0  0.0  0.0      0.0           0.0        
 0.0   0.0          0.0  0.0  0.0  0.0  0.0  …   0.0           0.0        
 0.0   0.213897     0.0  0.0  0.0  0.0  0.0     -0.305234      0.569269   
 0.0   0.334899     0.0  0.0  0.0  0.0  1.0     -1.0          -0.0313578  
 0.0   0.0892902    0.0  0.0  0.0  0.0  0.0      0.46087      -0.10649    
 0.0  -1.0          1.0  0.0  0.0  0.0  0.0      0.243059      0.0683272  
 0.0   7.04712e-16  0.0  1.0  0.0  0.0  0.0  …   1.24084e-15  -1.0        
 0.0  -4.18357e-16  0.0  0.0  1.0  0.0  0.0     -2.80668e-16   1.68265e-17
 0.0   0.0726226    0.0  0.0  0.0  1.0  0.0     -0.106615      6.54333e-18
 1.0   2.93639e-17  0.0  0.0  0.0  0.0  0.0      1.37408e-18   0.171324   

julia> # Partition the Eigenvectors and Eigenvalues
+    l       = searchsortedfirst(-Λ, -1) - 1
+    Λ1, Λ2  = Λ[1:l],Λ[l+1:length(Λ)]
+    V11, V12, V21, V22 = partition(V, l)

julia> 7

julia> ([Inf, 1.28565, 1.12325, 1.12325, 1.12325, 1.12325, 1.01093], [0.989192, 0.890272, 0.890272, 0.890272, 0.890272, 0.777816, -6.91945e-17])

julia> ERROR: UndefVarError: partition not defined

julia> V
14×14 Array{Float64,2}:
 0.0   0.0          0.0  0.0  0.0  0.0  0.0  …   0.0           0.0        
 0.0   0.213897     0.0  0.0  0.0  0.0  0.0     -0.305234     -0.0650076  
 0.0   0.0          0.0  0.0  0.0  0.0  0.0      0.0           0.0        
 0.0   0.0          0.0  0.0  0.0  0.0  0.0      0.0           0.0        
 0.0   0.0          0.0  0.0  0.0  0.0  0.0      0.0           0.0        
 0.0   0.0          0.0  0.0  0.0  0.0  0.0  …   0.0           0.0        
 0.0   0.213897     0.0  0.0  0.0  0.0  0.0     -0.305234      0.569269   
 0.0   0.334899     0.0  0.0  0.0  0.0  1.0     -1.0          -0.0313578  
 0.0   0.0892902    0.0  0.0  0.0  0.0  0.0      0.46087      -0.10649    
 0.0  -1.0          1.0  0.0  0.0  0.0  0.0      0.243059      0.0683272  
 0.0   7.04712e-16  0.0  1.0  0.0  0.0  0.0  …   1.24084e-15  -1.0        
 0.0  -4.18357e-16  0.0  0.0  1.0  0.0  0.0     -2.80668e-16   1.68265e-17
 0.0   0.0726226    0.0  0.0  0.0  1.0  0.0     -0.106615      6.54333e-18
 1.0   2.93639e-17  0.0  0.0  0.0  0.0  0.0      1.37408e-18   0.171324   

julia> V[1:end,:]
14×14 Array{Float64,2}:
 0.0   0.0          0.0  0.0  0.0  0.0  0.0  …   0.0           0.0        
 0.0   0.213897     0.0  0.0  0.0  0.0  0.0     -0.305234     -0.0650076  
 0.0   0.0          0.0  0.0  0.0  0.0  0.0      0.0           0.0        
 0.0   0.0          0.0  0.0  0.0  0.0  0.0      0.0           0.0        
 0.0   0.0          0.0  0.0  0.0  0.0  0.0      0.0           0.0        
 0.0   0.0          0.0  0.0  0.0  0.0  0.0  …   0.0           0.0        
 0.0   0.213897     0.0  0.0  0.0  0.0  0.0     -0.305234      0.569269   
 0.0   0.334899     0.0  0.0  0.0  0.0  1.0     -1.0          -0.0313578  
 0.0   0.0892902    0.0  0.0  0.0  0.0  0.0      0.46087      -0.10649    
 0.0  -1.0          1.0  0.0  0.0  0.0  0.0      0.243059      0.0683272  
 0.0   7.04712e-16  0.0  1.0  0.0  0.0  0.0  …   1.24084e-15  -1.0        
 0.0  -4.18357e-16  0.0  0.0  1.0  0.0  0.0     -2.80668e-16   1.68265e-17
 0.0   0.0726226    0.0  0.0  0.0  1.0  0.0     -0.106615      6.54333e-18
 1.0   2.93639e-17  0.0  0.0  0.0  0.0  0.0      1.37408e-18   0.171324   

julia> # Partition the Eigenvectors and Eigenvalues
+    l       = searchsortedfirst(-Λ, -1) - 1
+    Λ1, Λ2  = Λ[1:l],Λ[l+1:length(Λ)]
+    V11, V12, V21, V22 = V[1:l,1:l],V[1:l,l+1:end],V[l+1:end,1:l],V[l+1:end,l+1:end]

julia> 7

julia> ([Inf, 1.28565, 1.12325, 1.12325, 1.12325, 1.12325, 1.01093], [0.989192, 0.890272, 0.890272, 0.890272, 0.890272, 0.777816, -6.91945e-17])

julia> ([0.0 0.0 … 0.0 0.0; 0.0 0.213897 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.213897 … 0.0 0.0], [0.00958578 0.0 … 0.0 0.0; 0.00850722 0.159123 … -0.305234 -0.0650076; … ; 0.0 0.0 … 0.0 0.0; 0.00850722 0.159123 … -0.305234 0.569269], [0.0 0.334899 … 0.0 1.0; 0.0 0.0892902 … 0.0 0.0; … ; 0.0 0.0726226 … 1.0 0.0; 1.0 2.93639e-17 … 0.0 0.0], [-1.0 1.0 … -1.0 -0.0313578; 0.0185597 -0.303218 … 0.46087 -0.10649; … ; -0.0140697 0.11904 … -0.106615 6.54333e-18; 5.89836e-18 6.36005e-18 … 1.37408e-18 0.171324])

julia> # Partition the Eigenvectors and Eigenvalues
+    l       = searchsortedfirst(-Λ, -1) - 1
+    Λ1, Λ2  = Λ[1:l],Λ[l+1:length(Λ)]
+    V11, V12, V21, V22 = V[1:l,1:l],V[1:l,l+1:end],V[l+1:end,1:l],V[l+1:end,l+1:end]
P = V21*inv(V11);

julia> 7

julia> ([Inf, 1.28565, 1.12325, 1.12325, 1.12325, 1.12325, 1.01093], [0.989192, 0.890272, 0.890272, 0.890272, 0.890272, 0.777816, -6.91945e-17])

julia> ([0.0 0.0 … 0.0 0.0; 0.0 0.213897 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.213897 … 0.0 0.0], [0.00958578 0.0 … 0.0 0.0; 0.00850722 0.159123 … -0.305234 -0.0650076; … ; 0.0 0.0 … 0.0 0.0; 0.00850722 0.159123 … -0.305234 0.569269], [0.0 0.334899 … 0.0 1.0; 0.0 0.0892902 … 0.0 0.0; … ; 0.0 0.0726226 … 1.0 0.0; 1.0 2.93639e-17 … 0.0 0.0], [-1.0 1.0 … -1.0 -0.0313578; 0.0185597 -0.303218 … 0.46087 -0.10649; … ; -0.0140697 0.11904 … -0.106615 6.54333e-18; 5.89836e-18 6.36005e-18 … 1.37408e-18 0.171324])

julia> 
julia> P
ERROR: UndefVarError: P not defined

julia> V21
7×7 Array{Float64,2}:
 0.0   0.334899     0.0  0.0  0.0  0.0  1.0
 0.0   0.0892902    0.0  0.0  0.0  0.0  0.0
 0.0  -1.0          1.0  0.0  0.0  0.0  0.0
 0.0   7.04712e-16  0.0  1.0  0.0  0.0  0.0
 0.0  -4.18357e-16  0.0  0.0  1.0  0.0  0.0
 0.0   0.0726226    0.0  0.0  0.0  1.0  0.0
 1.0   2.93639e-17  0.0  0.0  0.0  0.0  0.0

julia> V11
7×7 Array{Float64,2}:
 0.0  0.0       0.0  0.0  0.0  0.0  0.0
 0.0  0.213897  0.0  0.0  0.0  0.0  0.0
 0.0  0.0       0.0  0.0  0.0  0.0  0.0
 0.0  0.0       0.0  0.0  0.0  0.0  0.0
 0.0  0.0       0.0  0.0  0.0  0.0  0.0
 0.0  0.0       0.0  0.0  0.0  0.0  0.0
 0.0  0.213897  0.0  0.0  0.0  0.0  0.0

julia> inv(V11)
ERROR: Base.LinAlg.LAPACKException(1)
Stacktrace:
 [1] chklapackerror(::Int64) at ./linalg/lapack.jl:34
 [2] trtrs!(::Char, ::Char, ::Char, ::Array{Float64,2}, ::Array{Float64,2}) at ./linalg/lapack.jl:3291
 [3] inv at ./linalg/triangular.jl:487 [inlined]
 [4] inv(::Array{Float64,2}) at ./linalg/dense.jl:657

julia> # Get H1 and H2 (the hamiltonians)
H1 = [A_hat zeros(A_hat);
+      -1*Q_hat eye(Q_hat)];
H2 = [eye(A_hat) B_hat*inv(R)*By_tilde';
+      zeros(A_hat) A_bar'];
H = H2,H1;

julia> 
julia> 
julia> 
julia> # Construct the eigenvalues/eigenvectors
+    Λ, V = eig(H...)

julia> ([0.890272, 0.890272, 0.890272, 0.890272, 0.0, 0.989192, 0.777816, 1.28565, Inf, 1.01093, 1.12325, 1.12325, 1.12325, 1.12325], [0.0 0.0 … 0.0 0.0; 0.0 0.0 … -0.120779 0.00287794; … ; 0.0 0.0 … -0.0903546 -0.555716; 0.0 0.0 … 1.83276e-17 1.04549e-17])

julia> # Sort the eigenvalues from largest to smallest and then reorder the
+    # eigenvectors accordingly
+    idx = sortperm(-Λ)
+    Λ   = Λ[idx]
+    V   = V[:,idx]

julia> 
julia> 14-element Array{Int64,1}:
  9
  8
 11
 12
 13
 14
 10
  6
  1
  2
  3
  4
  7
  5

julia> 14-element Array{Float64,1}:
 Inf       
   1.28565 
   1.12325 
   1.12325 
   1.12325 
   1.12325 
   1.01093 
   0.989192
   0.890272
   0.890272
   0.890272
   0.890272
   0.777816
   0.0     

julia> 14×14 Array{Float64,2}:
  0.0           0.0          …  0.0  0.0  0.0   0.0          0.0
  0.0650076    -0.305234        0.0  0.0  0.0  -0.213897     0.0
  0.0           0.0             0.0  0.0  0.0   0.0          0.0
  0.0           0.0             0.0  0.0  0.0   0.0          0.0
  0.0           0.0             0.0  0.0  0.0   0.0          0.0
  0.0           0.0          …  0.0  0.0  0.0   0.0          0.0
 -0.569269     -0.305234        0.0  0.0  0.0  -0.213897     0.0
  0.0313578    -1.0             0.0  0.0  0.0  -0.334899     0.0
  0.10649       0.46087         0.0  0.0  0.0  -0.0892902    0.0
 -0.0683272     0.243059        0.0  0.0  0.0   1.0          0.0
  1.0          -3.23956e-16  …  1.0  0.0  0.0   3.50192e-16  0.0
 -1.68265e-17  -2.80668e-16     0.0  1.0  0.0   4.18357e-16  0.0
 -7.21729e-18  -0.106615        0.0  0.0  1.0  -0.0726226    0.0
 -0.171324      4.57325e-17     0.0  0.0  0.0   2.60398e-18  1.0

julia> # Partition the Eigenvectors and Eigenvalues
+    l       = searchsortedfirst(-Λ, -1) - 1
+    Λ1, Λ2  = Λ[1:l],Λ[l+1:length(Λ)]
+    V11, V12, V21, V22 = V[1:l,1:l],V[1:l,l+1:end],V[l+1:end,1:l],V[l+1:end,l+1:end]
P = V21*inv(V11);

julia> 7

julia> ([Inf, 1.28565, 1.12325, 1.12325, 1.12325, 1.12325, 1.01093], [0.989192, 0.890272, 0.890272, 0.890272, 0.890272, 0.777816, 0.0])

julia> ([0.0 0.0 … 0.0 0.00958578; 0.0650076 -0.305234 … 0.00287794 0.00850722; … ; 0.0 0.0 … 0.567812 0.0; -0.569269 -0.305234 … 0.00287794 0.00850722], [0.0 0.0 … 0.0 0.0; 0.0 0.0 … -0.213897 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … -0.213897 0.0], [0.0313578 -1.0 … -1.0 -1.0; 0.10649 0.46087 … 0.193985 0.0185597; … ; -7.21729e-18 -0.106615 … -0.555716 -0.0140697; -0.171324 4.57325e-17 … 1.04549e-17 1.9007e-18], [1.0 0.0 … -0.334899 0.0; 0.0 0.0 … -0.0892902 0.0; … ; 0.0 0.0 … -0.0726226 0.0; 0.0 0.0 … 2.60398e-18 1.0])

julia> 
julia> P
7×7 Array{Float64,2}:
 -107.229         2.98984       6.05429      …  -1.77775       0.286339   
    3.27618      -1.18725      -0.796305         0.34929      -0.322642   
    6.05429      -0.822416     -0.186729         0.802622      0.0261106  
   -2.5075e-15    1.5766        7.55696e-16     -1.8615e-16   -1.5766     
   -8.06309e-16   7.98746e-16   8.93249e-16     -2.65384e-16   1.20771e-16
   -1.77775       0.313491      0.802622     …  -0.980468      0.035799   
    2.07236e-16  -0.270108      3.67349e-17      1.23677e-17   0.270108   

julia> a
ERROR: UndefVarError: a not defined

julia> P
7×7 Array{Float64,2}:
 -107.229         2.98984       6.05429      …  -1.77775       0.286339   
    3.27618      -1.18725      -0.796305         0.34929      -0.322642   
    6.05429      -0.822416     -0.186729         0.802622      0.0261106  
   -2.5075e-15    1.5766        7.55696e-16     -1.8615e-16   -1.5766     
   -8.06309e-16   7.98746e-16   8.93249e-16     -2.65384e-16   1.20771e-16
   -1.77775       0.313491      0.802622     …  -0.980468      0.035799   
    2.07236e-16  -0.270108      3.67349e-17      1.23677e-17   0.270108   

julia> # Partition the Eigenvectors and Eigenvalues
+    l       = searchsortedfirst(-Λ, -1) - 1
+    Λ1, Λ2  = Λ[1:l],Λ[l+1:length(Λ)]
+    V11, V12, V21, V22 = V[1:l,1:l],V[1:l,l+1:end],V[l+1:end,1:l],V[l+1:end,l+1:end]
P_v = V21*inv(V11);

julia> 7

julia> ([Inf, 1.28565, 1.12325, 1.12325, 1.12325, 1.12325, 1.01093], [0.989192, 0.890272, 0.890272, 0.890272, 0.890272, 0.777816, 0.0])

julia> ([0.0 0.0 … 0.0 0.00958578; 0.0650076 -0.305234 … 0.00287794 0.00850722; … ; 0.0 0.0 … 0.567812 0.0; -0.569269 -0.305234 … 0.00287794 0.00850722], [0.0 0.0 … 0.0 0.0; 0.0 0.0 … -0.213897 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … -0.213897 0.0], [0.0313578 -1.0 … -1.0 -1.0; 0.10649 0.46087 … 0.193985 0.0185597; … ; -7.21729e-18 -0.106615 … -0.555716 -0.0140697; -0.171324 4.57325e-17 … 1.04549e-17 1.9007e-18], [1.0 0.0 … -0.334899 0.0; 0.0 0.0 … -0.0892902 0.0; … ; 0.0 0.0 … -0.0726226 0.0; 0.0 0.0 … 2.60398e-18 1.0])

julia> 
julia> 

julia> P_v
7×7 Array{Float64,2}:
 -107.229         2.98984       6.05429      …  -1.77775       0.286339   
    3.27618      -1.18725      -0.796305         0.34929      -0.322642   
    6.05429      -0.822416     -0.186729         0.802622      0.0261106  
   -2.5075e-15    1.5766        7.55696e-16     -1.8615e-16   -1.5766     
   -8.06309e-16   7.98746e-16   8.93249e-16     -2.65384e-16   1.20771e-16
   -1.77775       0.313491      0.802622     …  -0.980468      0.035799   
    2.07236e-16  -0.270108      3.67349e-17      1.23677e-17   0.270108   

julia> ## RICATTI ITERATION TO GET P and F
ricatti_f(P) = Q_hat + A_bar'*P*A_hat - A_bar'*P*B_hat*inv(R+By_tilde'*P*B_hat)*By_tilde'*P*A_hat;
func_Ftilde(P) = inv(R+By_tilde'*P*B_hat)*By_tilde'*P*A_hat;

julia> 
julia> 
julia> # Set an initial value for P and F
P = -eye(n_y+1);
F = func_Ftilde(P);

julia> 
julia> 
julia> # Ricatti Iteration
tolerance = 0.0000001; #tolerance level
iter = 1; #nummber of iterations
diff = 10;
while iter<1000 && diff>tolerance
+    Pnew = ricatti_f(P);
+    Fnew = func_Ftilde(P);
+    diff1 = sum(abs.(Pnew-P));
+    diff2 = sum(abs.(Fnew-F));
+    diff = max(diff1,diff2);
+    P = Pnew;
+    F = Fnew;
+    iter=iter+1;
end
F = inv(R + Wz'*ψ_mc)*(R*F + Wy' + Wz'Θ);
A0 = Ay + Az*Θ - Az*ψ_mc*F - By*F;

julia> 
julia> 
julia> 
julia> 
julia> 
julia> 
julia> P
7×7 Array{Float64,2}:
 -107.229         2.98984       6.05429      …  -1.77775       0.286339   
    3.27618      -1.18725      -0.796305         0.34929      -0.322642   
    6.05429      -0.822416     -0.186729         0.802622      0.0261106  
   -3.35295e-15   1.5766        5.30886e-16     -3.03174e-16  -1.5766     
   -8.06309e-16   7.98746e-16   8.93249e-16     -2.65384e-16   1.20771e-16
   -1.77775       0.313491      0.802622     …  -0.980468      0.035799   
    2.20866e-16  -0.270108      2.63497e-17      1.17641e-17   0.270108   

julia> P_v
7×7 Array{Float64,2}:
 -107.229         2.98984       6.05429      …  -1.77775       0.286339   
    3.27618      -1.18725      -0.796305         0.34929      -0.322642   
    6.05429      -0.822416     -0.186729         0.802622      0.0261106  
   -2.5075e-15    1.5766        7.55696e-16     -1.8615e-16   -1.5766     
   -8.06309e-16   7.98746e-16   8.93249e-16     -2.65384e-16   1.20771e-16
   -1.77775       0.313491      0.802622     …  -0.980468      0.035799   
    2.07236e-16  -0.270108      3.67349e-17      1.23677e-17   0.270108   

julia> A0
7×7 Array{Float64,2}:
 1.0       0.0       0.0        0.0        0.0       0.0          0.0    
 0.189642  0.705724  0.228796  -0.344699  -0.130676  0.000576212  0.08059
 0.0       0.0       0.9        0.0        0.0       0.0          0.0    
 0.0       0.0       0.0        0.9        0.0       0.0          0.0    
 0.0       0.0       0.0        0.0        0.9       0.0          0.0    
 0.0       0.0       0.0        0.0        0.0       0.9          0.0    
 0.189642  0.705724  0.228796  -0.344699  -0.130676  0.000576212  0.08059

julia> # Construct the eigenvalues/eigenvectors
+    Λ, V = eig(H...)

julia> ([0.890272, 0.890272, 0.890272, 0.890272, 0.0, 0.989192, 0.777816, 1.28565, Inf, 1.01093, 1.12325, 1.12325, 1.12325, 1.12325], [0.0 0.0 … 0.0 0.0; 0.0 0.0 … -0.120779 0.00287794; … ; 0.0 0.0 … -0.0903546 -0.555716; 0.0 0.0 … 1.83276e-17 1.04549e-17])

julia> # Sort the eigenvalues from largest to smallest and then reorder the
+    # eigenvectors accordingly
+    idx = sortperm(-Λ)
+    Λ   = Λ[idx]
+    V   = V[:,idx]

julia> 
julia> 14-element Array{Int64,1}:
  9
  8
 11
 12
 13
 14
 10
  6
  1
  2
  3
  4
  7
  5

julia> 14-element Array{Float64,1}:
 Inf       
   1.28565 
   1.12325 
   1.12325 
   1.12325 
   1.12325 
   1.01093 
   0.989192
   0.890272
   0.890272
   0.890272
   0.890272
   0.777816
   0.0     

julia> 14×14 Array{Float64,2}:
  0.0           0.0          …  0.0  0.0  0.0   0.0          0.0
  0.0650076    -0.305234        0.0  0.0  0.0  -0.213897     0.0
  0.0           0.0             0.0  0.0  0.0   0.0          0.0
  0.0           0.0             0.0  0.0  0.0   0.0          0.0
  0.0           0.0             0.0  0.0  0.0   0.0          0.0
  0.0           0.0          …  0.0  0.0  0.0   0.0          0.0
 -0.569269     -0.305234        0.0  0.0  0.0  -0.213897     0.0
  0.0313578    -1.0             0.0  0.0  0.0  -0.334899     0.0
  0.10649       0.46087         0.0  0.0  0.0  -0.0892902    0.0
 -0.0683272     0.243059        0.0  0.0  0.0   1.0          0.0
  1.0          -3.23956e-16  …  1.0  0.0  0.0   3.50192e-16  0.0
 -1.68265e-17  -2.80668e-16     0.0  1.0  0.0   4.18357e-16  0.0
 -7.21729e-18  -0.106615        0.0  0.0  1.0  -0.0726226    0.0
 -0.171324      4.57325e-17     0.0  0.0  0.0   2.60398e-18  1.0

julia> # Partition the Eigenvectors and Eigenvalues
+    l       = searchsortedfirst(-Λ, -1) - 1
+    Λ1, Λ2  = Λ[1:l],Λ[l+1:length(Λ)]
+    V11, V12, V21, V22 = V[1:l,1:l],V[1:l,l+1:end],V[l+1:end,1:l],V[l+1:end,l+1:end]
P = V21*inv(V11);    
F = inv(R+By_tilde'*P*B_hat)*By_tilde'*P*A_hat;
F = inv(R + Wz'*ψ_mc)*(R*F + Wy' + Wz'Θ);
A0 = Ay + Az*Θ - Az*ψ_mc*F - By*F;

julia> 7

julia> ([Inf, 1.28565, 1.12325, 1.12325, 1.12325, 1.12325, 1.01093], [0.989192, 0.890272, 0.890272, 0.890272, 0.890272, 0.777816, 0.0])

julia> ([0.0 0.0 … 0.0 0.00958578; 0.0650076 -0.305234 … 0.00287794 0.00850722; … ; 0.0 0.0 … 0.567812 0.0; -0.569269 -0.305234 … 0.00287794 0.00850722], [0.0 0.0 … 0.0 0.0; 0.0 0.0 … -0.213897 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … -0.213897 0.0], [0.0313578 -1.0 … -1.0 -1.0; 0.10649 0.46087 … 0.193985 0.0185597; … ; -7.21729e-18 -0.106615 … -0.555716 -0.0140697; -0.171324 4.57325e-17 … 1.04549e-17 1.9007e-18], [1.0 0.0 … -0.334899 0.0; 0.0 0.0 … -0.0892902 0.0; … ; 0.0 0.0 … -0.0726226 0.0; 0.0 0.0 … 2.60398e-18 1.0])

julia> 
julia> 
julia> 
julia> 
julia> A0
7×7 Array{Float64,2}:
 1.0       0.0       0.0        0.0        0.0       0.0          0.0    
 0.189642  0.705724  0.228796  -0.344699  -0.130676  0.000576212  0.08059
 0.0       0.0       0.9        0.0        0.0       0.0          0.0    
 0.0       0.0       0.0        0.9        0.0       0.0          0.0    
 0.0       0.0       0.0        0.0        0.9       0.0          0.0    
 0.0       0.0       0.0        0.0        0.0       0.9          0.0    
 0.189642  0.705724  0.228796  -0.344699  -0.130676  0.000576212  0.08059

julia> 

julia> ## GIVEN INITIAL STATE, CALCULATE PATH OF X (State)  AND u (Control)
K0=k0 = 0.8;
S0 = [0.2 0.0 0.0 0.0]; # Initial value for S = [log(z) τ_xt τ_ht g]
path_length = 100;

julia> 
julia> 
julia> 
julia> # Simulate shocks for entire time period
# S = [log(z_t) τ_xt τ_ht log(g_t)-log(g_ss)]. Here g_t = g_ss*exp(S_ss[4]) where S_ss[4] is 4th element of shock that models govt spending. Therefore, S_ss[4] = log(g_t) - log(g_ss)
e_z = Normal(0,1);
ε = rand(e_z,size(Qs,1),path_length-1);

julia> 
julia> 
julia> 
julia> X = zeros(n_y+1,path_length);
X[:,1] = [1 k0 S0 K0]';
U = zeros(size(R,1),path_length);
for i = 2:path_length
+    X[:,i] = A0*X[:,i-1] + Cy*ε[:,i-1];
end
U = -F*X;

julia> 
julia> 
julia> 
julia> 
julia> plot(x=1:path_length,y=U[1,:])
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near no file:0
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near no file:0
in render at /////////////////////////////////////////////////////home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/Gadfly/src/geom/point.jl

julia> [14880:14918:1117/131447.120238:ERROR:browser_gpu_channel_host_factory.cc(108)] Failed to launch GPU process.
Created new window in existing browser session.


julia> include("Vaughan.jl")
ERROR: could not open file /home/jintu/Vaughan.jl
Stacktrace:
 [1] include_from_node1(::String) at ./loading.jl:569
 [2] include(::String) at ./sysimg.jl:14

julia> pwd()
"/home/jintu"

julia> cd("/media/jintu/Local Data/Work/MyProjects/AdvMacro_Computation/Ellen/HW2")

julia> pwd()
"/media/jintu/Local Data/Work/MyProjects/AdvMacro_Computation/Ellen/HW2"

julia> include("Vaughan.jl")
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:57
 [3] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/trust_region.jl:82
 [4] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [5] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [6] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::#f!, ::Array{Float64,1}) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] eval(::Module, ::Any) at ./boot.jl:235
 [11] eval_user_input(::Any, ::Base.REPL.REPLBackend) at ./REPL.jl:66
 [12] macro expansion at ./REPL.jl:97 [inlined]
 [13] (::Base.REPL.##1#2{Base.REPL.REPLBackend})() at ./event.jl:73
while loading /media/jintu/Local Data/Work/MyProjects/AdvMacro_Computation/Ellen/HW2/Vaughan.jl, in expression starting on line 33
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] !(::BitArray{1}) at ./deprecated.jl:57
 [3] check_isfinite(::Array{Float64,1}) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/utils.jl:32
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/trust_region.jl:91
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::#f!, ::Array{Float64,1}) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [8] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] include(::String) at ./sysimg.jl:14
 [11] eval(::Module, ::Any) at ./boot.jl:235
 [12] eval_user_input(::Any, ::Base.REPL.REPLBackend) at ./REPL.jl:66
 [13] macro expansion at ./REPL.jl:97 [inlined]
 [14] (::Base.REPL.##1#2{Base.REPL.REPLBackend})() at ./event.jl:73
while loading /media/jintu/Local Data/Work/MyProjects/AdvMacro_Computation/Ellen/HW2/Vaughan.jl, in expression starting on line 33
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{NLsolve.SolverState}, ::Int64) at ./deprecated.jl:57
 [3] Type at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/solver_state_results.jl:20 [inlined]
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/trust_region.jl:99
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::#f!, ::Array{Float64,1}) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [8] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] include(::String) at ./sysimg.jl:14
 [11] eval(::Module, ::Any) at ./boot.jl:235
 [12] eval_user_input(::Any, ::Base.REPL.REPLBackend) at ./REPL.jl:66
 [13] macro expansion at ./REPL.jl:97 [inlined]
 [14] (::Base.REPL.##1#2{Base.REPL.REPLBackend})() at ./event.jl:73
while loading /media/jintu/Local Data/Work/MyProjects/AdvMacro_Computation/Ellen/HW2/Vaughan.jl, in expression starting on line 33

julia> [17577:17616:1117/133655.870008:ERROR:browser_gpu_channel_host_factory.cc(108)] Failed to launch GPU process.
Created new window in existing browser session.


julia> include("Vaughan.jl")
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:57
 [3] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/trust_region.jl:82
 [4] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [5] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [6] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::#f!, ::Array{Float64,1}) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] eval(::Module, ::Any) at ./boot.jl:235
 [11] eval_user_input(::Any, ::Base.REPL.REPLBackend) at ./REPL.jl:66
 [12] macro expansion at ./REPL.jl:97 [inlined]
 [13] (::Base.REPL.##1#2{Base.REPL.REPLBackend})() at ./event.jl:73
while loading /media/jintu/Local Data/Work/MyProjects/AdvMacro_Computation/Ellen/HW2/Vaughan.jl, in expression starting on line 32
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] !(::BitArray{1}) at ./deprecated.jl:57
 [3] check_isfinite(::Array{Float64,1}) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/utils.jl:32
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/trust_region.jl:91
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::#f!, ::Array{Float64,1}) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [8] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] include(::String) at ./sysimg.jl:14
 [11] eval(::Module, ::Any) at ./boot.jl:235
 [12] eval_user_input(::Any, ::Base.REPL.REPLBackend) at ./REPL.jl:66
 [13] macro expansion at ./REPL.jl:97 [inlined]
 [14] (::Base.REPL.##1#2{Base.REPL.REPLBackend})() at ./event.jl:73
while loading /media/jintu/Local Data/Work/MyProjects/AdvMacro_Computation/Ellen/HW2/Vaughan.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{NLsolve.SolverState}, ::Int64) at ./deprecated.jl:57
 [3] Type at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/solver_state_results.jl:20 [inlined]
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/trust_region.jl:99
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::#f!, ::Array{Float64,1}) at /home/jintu/julia/JuliaPro-0.6.0.1/JuliaPro/pkgs-0.6.0.1/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [8] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] include(::String) at ./sysimg.jl:14
 [11] eval(::Module, ::Any) at ./boot.jl:235
 [12] eval_user_input(::Any, ::Base.REPL.REPLBackend) at ./REPL.jl:66
 [13] macro expansion at ./REPL.jl:97 [inlined]
 [14] (::Base.REPL.##1#2{Base.REPL.REPLBackend})() at ./event.jl:73
while loading /media/jintu/Local Data/Work/MyProjects/AdvMacro_Computation/Ellen/HW2/Vaughan.jl, in expression starting on line 32

julia> [17799:17837:1117/133812.244096:ERROR:browser_gpu_channel_host_factory.cc(108)] Failed to launch GPU process.
Created new window in existing browser session.


julia> x_ss
2-element Array{Float64,1}:
 0.739505
 0.357347

julia> include("Vaughan.jl")

julia> [17954:17995:1117/133846.468913:ERROR:browser_gpu_channel_host_factory.cc(108)] Failed to launch GPU process.
Created new window in existing browser session.


julia> 